apply plugin: 'java'
apply plugin: 'groovy'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.1.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.1.2'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.1'
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile group: 'jaxen', name: 'jaxen', version: '1.1.1'

    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'com.github.robfletcher', name: 'betamax', version: '1.0'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.4'
}

task jobs(type: JavaExec, group: "rundeck") {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rundeck.controlm.Jobs'

    if (project.hasProperty('input')) {
        final String[] input = project.input.split(",");

        input.each {
            args(it)
        }

    }
}

task upload(type: JavaExec, group: "rundeck") {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rundeck.controlm.Uploader'

    if (project.hasProperty('input')) {
        args(project.properties['input'])
    }
}

task resources(type: JavaExec, group: "rundeck") {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rundeck.controlm.Resources'

    if (project.hasProperty('input')) {
        final String[] input = project.input.split(",");

        input.each {
            args(it)
        }
    }
}
